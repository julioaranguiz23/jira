name: Run from Jira

on:
  workflow_dispatch: # Permite ejecuci√≥n manual desde GitHub o API
    inputs:
      test_to_run:
        description: 'ID del issue de Jira'
        required: true
      jira_base_url:
        description: 'Base URL de Jira'
        required: true
      jira_email:
        description: 'Email del usuario en Jira'
        required: true
jobs:
  selenium-test:
    runs-on: ubuntu-latest

    env:
      TEST_TO_RUN: ${{ github.event.inputs.test_to_run }}
      JIRA_BASE_URL: ${{ github.event.inputs.jira_base_url }}
      JIRA_EMAIL: ${{ github.event.inputs.jira_email }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verificar valores de entrada
        run: |
          echo "TEST_TO_RUN: $TEST_TO_RUN"
          echo "JIRA_BASE_URL: $JIRA_BASE_URL"

  
      - name: Cambiar estado a EJECUTANDO
        run: |
          echo "Verificando transicion disponible"
          curl -s -X GET \
            -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
            -H "Content-Type: application/json" \
            "https://testgroupdemo.atlassian.net/rest/api/3/issue/$TEST_TO_RUN/transitions"

          echo "enviando transicion a EJECUTANDO"  
          curl -X POST \
            -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
            -H "Content-Type: application/json" \
            --data '{
              "transition": { "id": "31" }
            }' \
            https://testgroupdemo.atlassian.net/rest/api/3/issue/$TEST_TO_RUN/transitions


      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl unzip gnupg2 xvfb software-properties-common jq
          sudo apt-get install -y libnss3 libxss1 libappindicator3-1 libasound2t64 libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1 fonts-liberation libgbm1

      - name: Install Chrome and ChromeDriver
        run: |
          JSON_URL="https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json"
          CHROME_URL=$(curl -s $JSON_URL | jq -r '.channels.Stable.downloads.chrome[] | select(.platform == "linux64") | .url')
          DRIVER_URL=$(curl -s $JSON_URL | jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          
          wget -q "$CHROME_URL" -O chrome.zip
          unzip chrome.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome
          
          wget -q "$DRIVER_URL" -O chromedriver.zip
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

      - name: Verify installation
        run: |
          google-chrome --version
          chromedriver --version

      - name: Run Selenium test
        run: |
          xvfb-run --auto-servernum --server-args='-screen 0 1024x768x24' mvn compile exec:java -Dexec.mainClass="demo.demo_google"


      - name: Cambiar estado a EXITOSO o FALLIDO
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            TRANSICION_ID="51"
          else
            TRANSICION_ID="41"
          fi

          curl -X POST \
            -H "Authorization: Basic ${{ secrets.JIRA_AUTH }}" \
            -H "Content-Type: application/json" \
            --data "{\"transition\": { \"id\": \"$TRANSICION_ID\" }}" \
            https://testgroupdemo.atlassian.net/rest/api/3/issue/$TEST_TO_RUN/transitions
